<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.Ex02.mapper.MemberMapper">

    <resultMap id="memberMap" type="com.example.Ex02.dto.MemberDto">

        <result property="hobbyAsString" column="hobby"/>

    </resultMap>

    <!--멤버 전체조회-->
    <select id="selectAllMember" resultMap="memberMap">
        select *
        from members

        <where>
            <choose>
                <!--전체 검색-->
                <when test="whatColumn == 'all' and keyword !=null and keyword !=''">
                    id like '%' || #{keyword} || '%' or
                    name like '%' || #{keyword} || '%' or
                    address like '%' || #{keyword} || '%'
                </when>

                <when test="whatColumn != null and whatColumn != 'all' and keyword != null and keyword !=''">
                        ${whatColumn} like '%' || #{keyword}||  '%'
                </when>
            </choose>
        </where>
        order by id asc
        offset #{offset} row fetch next #{limit} rows only
    </select>

    <!--검색어 조회-->
    <select id="getCount" resultType="int">
        select count(*)
        from members
        <where>
            <choose>
                <!--전체 검색-->
                <when test="whatColumn == 'all' and keyword !=null and keyword !=''">
                    id like '%' || #{keyword} || '%' or
                    name like '%' || #{keyword} || '%' or
                    address like '%' || #{keyword} || '%'
                </when>

                <when test="whatColumn != null and whatColumn != 'all' and keyword != null and keyword !=''">
                    ${whatColumn} like '%' || #{keyword}||  '%'
                </when>
            </choose>
        </where>
    </select>


    <!--삽입 -->
    <insert id="insertMember" parameterType="com.example.Ex02.dto.MemberDto">
            insert into members (id, name, password, gender, hobby, address, mpoint)
            values(#{id}, #{name}, #{password}, #{gender}, #{hobbyAsString}, #{address}, #{mpoint})
    </insert>

    <select id="findById" resultMap="memberMap">
        select *
        from members
        where id = #{id}
    </select>

    <!--수정-->
    <update id="updateMember" parameterType="com.example.Ex02.dto.MemberDto">
        update members set
        name=#{name},
        password=#{password},
        gender=#{gender},
        hobby= #{hobbyAsString},
        address=#{address},
        mpoint=#{mpoint}

        where id = #{id}
    </update>

    <!--삭제-->
    <delete id="deleteMember" parameterType="com.example.Ex02.dto.MemberDto">
        delete from members
        where id=#{id}
    </delete>

    <!--아이디 중복체크-->
    <select id="selectCountById">
        select count(*) from members
        where id = #{id}
    </select>

    <!--mpoint 100추가-->
    <update id="addPoint">
        update members
        set mpoint =  mpoint + #{mpoint}
        where id = #{id}
    </update>

</mapper>